#!/bin/bash

if [ "$1" = "" ]
  then
    HOME_DIR="${HOME}"
  else
    HOME_DIR="/home/${1}" # assumes linux
fi

echo "Creating dotfile symlinks using home directory: ${HOME_DIR}"

if [ "$1" != "core" ]
  then
    ln -sfn ${HOME_DIR}/.dotfiles/vim ${HOME_DIR}/.vim
    ln -sf ${HOME_DIR}/.dotfiles/vimrc ${HOME_DIR}/.vimrc
fi

echo "Linking all dotfiles to home dir"
find . -maxdepth 1 | sed "s/\.\///" | grep -v "^\." | grep -v "^setup$" | xargs -n 1 bash -c 'if [ ! -L ${0}/.$1 ]; then echo Linking file $1; ln -sf $0/.dotfiles/$1 ${0}/.$1; fi' $HOME_DIR

cat ${HOME_DIR}/.bashrc | grep "bash_env" &> /dev/null
if [ "$?" != 0 ]
  then
    printf "\nif [ -f ${HOME_DIR}/.bash_env ]; then\n  . ${HOME_DIR}/.bash_env\nfi\n" >> ${HOME_DIR}/.bashrc
fi

cat ${HOME_DIR}/.bashrc | grep "functions" &> /dev/null
if [ "$?" != 0 ]
  then
    printf "\nif [ -f ${HOME_DIR}/.functions ]; then\n  . ${HOME_DIR}/.functions\nfi\n" >> ${HOME_DIR}/.bashrc
fi

cat ${HOME_DIR}/.bashrc | grep bash_aliases &> /dev/null
if [ "$?" != 0 ]
  then
    printf "\nif [ -f ${HOME_DIR}/.bash_aliases ]; then\n  . ${HOME_DIR}/.bash_aliases\nfi\n" >> ${HOME_DIR}/.bashrc
    if [ "$?" = 1 ] # could be readonline file system, core os for example
      then
        BASH_PROFILE_CONTENT=$(cat ${HOME_DIR}/.bashrc)
        rm ${HOME_DIR}/.bashrc
        printf "${BASH_PROFILE_CONTENT}\n\nif [ -f .bash_aliases ]; then\n  . ${HOME_DIR}/.bash_aliases\nfi" >> ${HOME_DIR}/.bashrc
    fi
fi

cat ${HOME_DIR}/.bashrc | grep "docker_env" &> /dev/null
if [ "$?" != 0 ]
  then
    printf "\nif [ -f ${HOME_DIR}/.docker_env ]; then\n  . ${HOME_DIR}/.docker_env\nfi\n" >> ${HOME_DIR}/.bashrc
fi

cat ${HOME_DIR}/.bashrc | grep "bash_prompt" &> /dev/null
if [ "$?" != 0 ]
  then
    printf "\nif [ -f ${HOME_DIR}/.bash_prompt ]; then\n  . ${HOME_DIR}/.bash_prompt\nfi\n" >> ${HOME_DIR}/.bashrc
fi

cat ${HOME_DIR}/.bashrc | grep "linux-key-mapping" &> /dev/null
if [ "$?" != 0 ]
  then
    printf "\nif [ -f ${HOME_DIR}/.linux-key-mapping ]; then\n  . ${HOME_DIR}/.linux-key-mapping\nfi\n" >> ${HOME_DIR}/.bashrc
fi

cat ${HOME_DIR}/.bashrc | grep "bash_completion\.d" &> /dev/null
if [ "$?" != 0 ]
  then
    printf "for f in ~/.bash_completion.d/* ; do source \$f; done\n" >> ${HOME_DIR}/.bashrc
fi

cat ${HOME_DIR}/.bashrc | grep 'source ~\/code\/z\/z\.sh' &> /dev/null
if [ "$?" != 0 ]
  then
    printf "source ~/code/z/z.sh\n" >> ${HOME_DIR}/.bashrc
fi
